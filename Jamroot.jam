using gcc ;

using pkg-config ;
import pkg-config ;
import testing ;
import type : register ;
import generators : register-standard ;
import regex : replace ;

pkg-config.import libmariadb ;
pkg-config.import libpq ;
lib po : : <name>boost_program_options ;

variant coverage : debug ;

project : requirements
	<cxxstd>20
	<visibility>hidden
	<linkflags>"-Wl,-z,defs,--warn-once,--gc-sections"
	<variant>release:<lto>on
	<variant>debug:<warnings>extra
	<variant>debug:<warnings-as-errors>on
	<variant>debug:<cflags>-Wnon-virtual-dtor
	<variant>debug:<cflags>-Wold-style-cast
	<variant>debug:<cflags>-Wcast-align
	<variant>debug:<cflags>-Wunused
	<variant>debug:<cflags>-Woverloaded-virtual
	<variant>debug:<cflags>-Wpedantic
	<variant>debug:<cflags>-Wconversion
	<variant>debug:<cflags>-Wsign-conversion
	<variant>debug:<cflags>-Wnull-dereference
	<variant>debug:<cflags>-Wdouble-promotion
	<variant>debug:<cflags>-Wformat=2
	<toolset>gcc,<variant>debug:<cflags>-Wduplicated-cond
	<toolset>gcc,<variant>debug:<cflags>-Wduplicated-branches
	<toolset>gcc,<variant>debug:<cflags>-Wlogical-op
	<toolset>gcc,<variant>debug:<cflags>-Wuseless-cast
	<variant>coverage:<coverage>on
	<toolset>tidy:<librarydef>boost
	<toolset>tidy:<librarydef>std
	<toolset>tidy:<checkxx>boost-*
	<toolset>tidy:<checkxx>bugprone-*
	<toolset>tidy:<xcheckxx>bugprone-macro-parentheses
	<toolset>tidy:<checkxx>clang-*
	<toolset>tidy:<checkxx>misc-*
	<toolset>tidy:<xcheckxx>misc-non-private-member-variables-in-classes
	<toolset>tidy:<checkxx>modernize-*
	<toolset>tidy:<xcheckxx>modernize-use-trailing-return-type
	<toolset>tidy:<checkxx>hicpp-*
	<toolset>tidy:<xcheckxx>hicpp-vararg
	<toolset>tidy:<xcheckxx>hicpp-signed-bitwise
	<toolset>tidy:<xcheckxx>hicpp-named-parameter
	<toolset>tidy:<xcheckxx>hicpp-no-array-decay
	<toolset>tidy:<checkxx>performance-*
	<toolset>tidy:<mapping>iwyu.json
	;

build-project main ;
build-project test ;

path-constant root : . ;

type.register SQL : sql ;

generators.register-standard embed.sql : SQL : CPP H ;

actions embed.sql
{
	echo "#include \"$(2:B).h\"" > $(1[1])
	m4 -DSOURCE=$(2) -DNS=$(NS) -DNAME=$(2:B) > $(1[2]) lib/genstmt.m4
}
rule embed.sql ( targets * : sources * : properties * )
{
	DEPENDS $(targets) : $(root)/lib/genstmt.m4 ;
	NS on $(targets) = [ replace $(sources:D) "/" "::" ] ;
}
IMPORT $(__name__) : embed.sql : : embed.sql ;
